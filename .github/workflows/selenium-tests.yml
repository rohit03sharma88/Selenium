# Selenium Tests Workflow
# This workflow runs on pushes, pull requests, and a daily schedule to build and test the Selenium project.

on:
  push:
    branches: ["main"] # Trigger on push to main branch
  pull_request:
    branches: ["main"] # Trigger on pull request to main branch
  schedule:
    - cron: "30 16 * * *" # Scheduled run every day at 16:30 UTC

jobs:
  build-and-test:
    runs-on: windows-latest # Use the latest Windows runner for compatibility with Selenium and .NET

    steps:
      # Step 1: Checkout code from the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up .NET environment
      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x # Specify .NET 8.0 for building and testing

      # Step 3: Install project dependencies
      - name: Install dependencies
        run: dotnet restore # Restores NuGet packages required for the project

      # Step 4: Build the project
      - name: Build project
        run: dotnet build --no-restore # Builds the project without restoring packages again

      # Step 5: Run tests
      - name: Run tests
        run: dotnet test --configuration Release --logger "trx;LogFileName=test-results.trx" # Runs tests in Release mode and outputs results in TRX format

      # Step 6: Upload Extent Report
      - name: Upload Extent Report
        uses: actions/upload-artifact@v4
        with:
          name: Extent Report # Name of the uploaded artifact
          path: ExtentReport.html # Path to the Extent Report file generated by tests
